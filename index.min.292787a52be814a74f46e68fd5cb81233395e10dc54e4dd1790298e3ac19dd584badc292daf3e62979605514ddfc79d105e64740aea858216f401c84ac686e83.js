var suggestions=document.getElementById("suggestions"),search=document.getElementById("search");search!==null&&document.addEventListener("keydown",inputFocus);function inputFocus(e){e.ctrlKey&&e.key==="/"&&(e.preventDefault(),search.focus()),e.key==="Escape"&&(search.blur(),suggestions.classList.add("d-none"))}document.addEventListener("click",function(e){var t=suggestions.contains(e.target);t||suggestions.classList.add("d-none")}),document.addEventListener("keydown",suggestionFocus);function suggestionFocus(e){const s=suggestions.classList.contains("d-none");if(s)return;const t=[...suggestions.querySelectorAll("a")];if(t.length===0)return;const n=t.indexOf(document.activeElement);if(e.key==="ArrowUp"){e.preventDefault();const s=n>0?n-1:0;t[s].focus()}else if(e.key==="ArrowDown"){e.preventDefault();const s=n+1<t.length?n+1:n;t[s].focus()}}(function(){var e=new FlexSearch.Document({tokenize:"forward",cache:100,document:{id:"id",store:["href","title","description"],index:["title","description","content"]}});e.add({id:0,href:"/docs/idl/introduction/",title:"Introduction",description:"Doks is a Hugo theme for building secure, fast, and SEO-ready documentation websites, which you can easily update and customize.",content:`Catalogue of inter-parameter dependencies #1. Requires #The Requires dependency is the simplest pattern. If a parameter is used (or it has a certain value), then another parameter must be used too (or be set to a certain value).
PayPal example//PayPay-Create invoice IF custom.label THEN custom.amount; IF minimum_amount_due THEN allow_partial_payment==true; Google Map exampleIF rankby=='distance' THEN NOT radius; IF rankby=='distance' THEN Or(keyword, name, type); minprice\u0026lt;=maxprice; IF radius THEN NOT rankby; Github example//Github - Create deployment status IF state=='inactive' THEN Accept LIKE '*application/vnd.github.ant-man-preview+json*'; IF state=='in_progress'|'queued' THEN Accept LIKE '*application/vnd.github.flash-preview+json*'; IF log_url THEN Accept LIKE '*application/vnd.github.ant-man-preview+json*'; IF environment THEN Accept LIKE '*application/vnd.github.flash-preview+json*'; IF environment_url THEN Accept LIKE '*application/vnd.github.ant-man-preview+json*'; IF auto_inactive THEN Accept LIKE '*application/vnd.github.ant-man-preview+json*'; 2. Or #Out of two or more parameters, at least one must be used. For example, in the Flickr API, when setting the information of a photo, the documentation states: “At least one of description or title must be set”.
CityGrid example//CityGrid - Places Detail Or(id, listing_id, infousa_id, public_id, phone); AllOrNone(id, id_type); Or(listing_id, public_id, infousa_id, phone); image_size_min \u0026lt;= image_size_max; 3. OnlyOne #Out of two or more parameters, one, and only one of them must be used. As an example, in the Twilio API, when sending an SMS, only one of From or MessagingServiceSid must be used: “You must also include either the From parameter or MessagingServiceSid parameter”.
Weather Company Data example//Weather Company Data - Search locations OnlyOne(geocode, postalKey, iataCode, icaoCode); Foursquare example//Foursquare - Search Venues OnlyOne(ll, near); IF intent=='browse' THEN OnlyOne(ll AND radius, sw AND ne); IF intent=='match' THEN name AND ll; IF radius THEN intent=='browse' OR (intent=='checkin' AND (categoryId OR query)); AllOrNone(sw, ne); IF sw THEN intent=='browse'; IF sw THEN NOT (ll OR radius); IF ne THEN intent=='browse'; IF ne THEN NOT (ll OR radius); IF intent=='match' THEN NOT categoryId; AllOrNone(providerId, linkedId); 4. AllOrNone #Out of two or more parameters, either all of them are used, or none of them. An instance of this dependency can be found in the GitHub API, between the parameters subject_id and subject_type of the operation GET /users/{username}/hovercard, as shown in the screenshot below:
Stripe example//Stripe - Create coupon OnlyOne(amount_off, percent_off); IF amount_off THEN currency; AllOrNone(duration=='repeating', duration_in_months); 5. ZeroOrOne #Out of two or more parameters, either zero or one can be used, but not more. This dependency can also be found in the YouTube search operation mentioned above, involving four input parameters forContentOwner, forDeveloper, forMine and relatedToVideoId:
Google example//Google Geocoding OnlyOne(address OR components, latlng, place_id); ZeroOrOne(bounds, latlng OR place_id); ZeroOrOne(region, latlng OR place_id); ZeroOrOne(result_type, address OR components); ZeroOrOne(location_type, address OR components); YouTube example//YouTube - Get comment threads OnlyOne(allThreadsRelatedToChannelId, channelId, id, videoId); ZeroOrOne(id, moderationStatus); ZeroOrOne(id, order); ZeroOrOne(id, pageToken); ZeroOrOne(id, searchTerms); Tumblr example//Tumblr - Get blog likes ZeroOrOne(before, after, offset); 6. Arithmetic/Relational #Two or more parameters are related by means of arithmetic (+, –, ×, ÷) or relational (\u0026lt;, ≤, \u0026gt;, ≥, =, ≠) operators. The most common shape of this dependency pattern is two parameters where one must be greater than or equal to the other, i.e., p1 ≥ p2. This happens with dates, times, IDs, prices, etc.
Other patterns are also possible. For example, in the Yelp API, when searching for businesses, the sum of limit + offset (parameters for paginating the results) must be less than or equal to 1000, otherwise the API returns an error: “Using the offset and limit parameters, you can get up to 1000 businesses from this endpoint if there are more than 1000 results. If you request a page out of this 1000 business limit, this endpoint will return an error”.
7. Complex #This pattern is simply a combination of two or more of the previous patterns. Based on our review, it is typical to see combinations of the Requires and the OnlyOne dependencies. See the following example from the Tumblr API. A post can be of different types, depending on the value of the type parameter. If type=\u0026lsquo;video\u0026rsquo;, then either the embed or the data parameter must be included too.
Some stats #Some of these dependencies are more common than others. For example, Requires and ZeroOrOne dependencies are very recurrent across the APIs analyzed in our study [1], while Or and Complex are not so much. See the following charts for a summary.
Frequency of the dependencies according to the number of occurrences and the number of APIs (out of 40) presenting them. Tutorial #👉 The Tutorial is intended for novice to intermediate users. Step-by-step instructions on how to start a new Doks project. Tutorial →
Quick Start #👉 The Quick Start is intended for intermediate to advanced users. One page summary of how to start a new Doks project. Quick Start →
Go further #Recipes, Reference Guides, Extensions, and Showcase.
Recipes #Get instructions on how to accomplish common tasks with Doks. Recipes →
Reference Guides #Learn how to customize Doks to fully make it your own. Reference Guides →
Extensions #Get instructions on how to add even more to Doks. Extensions →
Showcase #See what others have build with Doks. Showcase →
Contributing #Find out how to contribute to Doks. Contributing →
Help #Get help on Doks. Help →
`}),e.add({id:1,href:"/docs/idl/",title:"IDL",description:"IDL",content:""}),e.add({id:2,href:"/docs/idl/quick-start/",title:"How to use IDL",description:"One page summary of how to start a new Doks project.",content:`IDL dependencies can be straightforwardly specified in OAS specifications using IDL4OAS, an OAS extension. You just need to include the keyword x-dependencies at the operation level, and include the list of dependencies as an array. Take a look at this simple example:
paths: /example/route: get: operationId: exampleOperation parameters: - in: query type: boolean required: false name: p1 - in: query type: integer required: false name: p2 - in: query type: string required: false name: p3 x-dependencies: - Or(p1, p2, p3); - IF p1==true THEN p2; Requirements #Git — latest source release Node.js — latest LTS version or newer Why Node.js?Doks uses npm (included with Node.js) to centralize dependency management, making it easy to update resources, build tooling, plugins, and build scripts. Start a new Doks project #Create a new site, change directories, install dependencies, and start development server.
Create a new site #Doks is available as a child theme and a starter theme.
git clone https://github.com/h-enk/doks-child-theme.git my-doks-site Starter theme #Intended for intermediate to advanced users Intended for major customizations Easily update npm packages git clone https://github.com/h-enk/doks.git my-doks-site Help me chooseNot sure which one is for you? Pick the child theme. Change directories #cd my-doks-site Install dependencies #npm install Start development server #npm run start Doks will start the Hugo development webserver accessible by default at http://localhost:1313. Saved changes will live reload in the browser.
Other commands #Doks comes with commands for common tasks. Commands →
`}),e.add({id:3,href:"/docs/idl/commands/",title:"Commands",description:"Doks comes with commands for common tasks.",content:`💡 You can change the commands in the scripts section of \`./package.json\`. create #Create new content for your site: dd
npm run create [path] [flags] See also the Hugo docs: hugo new.
Docs based tree #Create a docs based tree — with a single command:
npm run create -- --kind docs [section] For example, create a docs based tree named guides:
npm run create -- --kind docs guides lint #Check scripts, styles, and markdown for errors:
npm run lint scripts #Check scripts for errors:
npm run lint:scripts [-- --fix] styles #Check styles for errors:
npm run lint:styles [-- --fix] markdown #Check markdown for errors:
npm run lint:markdown [-- --fix] clean #Delete temporary directories:
npm run clean start #Start local development server:
npm run start build #Build production website:
npm run build functions #Build Lambda functions:
npm run build:functions preview #Build production website including draft and future content:
npm run build:preview `}),e.add({id:4,href:"/docs/help/",title:"Help",description:"Help Doks.",content:""}),e.add({id:5,href:"/docs/help/how-to-update/",title:"How to Update",description:"Regularly update the installed npm packages to keep your Doks website stable, usable, and secure.",content:`💡 Learn more about semantic versioning and advanced range syntax. Check for outdated packages #The npm outdated command will check the registry to see if any (or, specific) installed packages are currently outdated:
npm outdated [[\u0026lt;@scope\u0026gt;/]\u0026lt;pkg\u0026gt; ...] Update packages #The npm update command will update all the packages listed to the latest version (specified by the tag config), respecting semver:
npm update [\u0026lt;pkg\u0026gt;...] `}),e.add({id:6,href:"/docs/help/troubleshooting/",title:"Troubleshooting",description:"Solutions to common problems.",content:`Problems updating npm packages #Delete the ./node_modules folder, and run again:
npm install Problems with cache #Delete the temporary directories:
npm run clean `}),e.add({id:7,href:"/docs/help/faq/",title:"FAQ",description:"Answers to frequently asked questions.",content:`Hyas? #Doks is a Hyas theme build by the creator of Hyas.
Footer notice? #Please keep it in place.
Keyboard shortcuts for search? #focus: Ctrl + / select: ↓ and ↑ open: Enter close: Esc Other documentation? #Netlify Hugo Can I get support? #Create a topic:
Netlify Community Hugo Forums Doks Discussions Contact the creator? #Send h-enk a message:
Netlify Community Hugo Forums Doks Discussions `}),e.add({id:8,href:"/docs/",title:"IDL",description:"Docs Doks.",content:""}),search.addEventListener("input",t,!0);function t(){const s=5;var n=this.value,o=e.search(n,{limit:s,enrich:!0});const t=new Map;for(const e of o.flatMap(e=>e.result)){if(t.has(e.doc.href))continue;t.set(e.doc.href,e.doc)}if(suggestions.innerHTML="",suggestions.classList.remove("d-none"),t.size===0&&n){const e=document.createElement("div");e.innerHTML=`No results for "<strong>${n}</strong>"`,e.classList.add("suggestion__no-results"),suggestions.appendChild(e);return}for(const[r,a]of t){const n=document.createElement("div");suggestions.appendChild(n);const e=document.createElement("a");e.href=r,n.appendChild(e);const o=document.createElement("span");o.textContent=a.title,o.classList.add("suggestion__title"),e.appendChild(o);const i=document.createElement("span");if(i.textContent=a.description,i.classList.add("suggestion__description"),e.appendChild(i),suggestions.appendChild(n),suggestions.childElementCount==s)break}}})()